<!DOCTYPE html>
<html>
  <head>
    <title>Idle Clans Tracker - RosaEinhorn</title>
    <meta name="viewport" content="width=device-width,initial-scale=1">
    <%= csrf_meta_tags %>
    <%= csp_meta_tag %>

    <!-- Theme CSS wird dynamisch geladen -->
    <link id="theme-css" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
    
    <%= stylesheet_link_tag "application", "data-turbo-track": "reload" %>
    <%= javascript_importmap_tags %>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
  </head>

  <body>
    <!-- Navigation -->
    <nav class="navbar navbar-expand-lg navbar-dark bg-primary">
      <div class="container">
        <%= link_to "ü¶Ñ RosaEinhorn Tracker", root_path, class: "navbar-brand" %>
        
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav">
          <span class="navbar-toggler-icon"></span>
        </button>
        
        <div class="collapse navbar-collapse" id="navbarNav">
          <ul class="navbar-nav me-auto">
            <li class="nav-item">
              <%= link_to "Leaderboard", root_path, class: "nav-link #{'active' if controller_name == 'leaderboard'}" %>
            </li>
            <% if admin_features_enabled? %>
              <li class="nav-item">
                <%= link_to "Admin", admin_item_values_path, class: "nav-link #{'active' if admin_mode?}" %>
              </li>
            <% end %>
          </ul>
          
          <ul class="navbar-nav">
            <!-- Theme Selector -->
            <li class="nav-item dropdown">
              <a class="nav-link dropdown-toggle d-flex align-items-center" href="#" id="themeDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                <span id="current-theme-icon">üé®</span>
                <span class="ms-2 d-none d-md-inline" id="current-theme-name">Theme</span>
              </a>
              <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="themeDropdown">
                <li>
                  <a class="dropdown-item d-flex align-items-center" href="#" onclick="switchTheme('default')">
                    <span class="me-2">‚òÄÔ∏è</span>
                    Standard (Bootstrap)
                  </a>
                </li>
                <li>
                  <a class="dropdown-item d-flex align-items-center" href="#" onclick="switchTheme('darkly')">
                    <span class="me-2">üåô</span>
                    Dark (Darkly)
                  </a>
                </li>
                <li>
                  <a class="dropdown-item d-flex align-items-center" href="#" onclick="switchTheme('cyborg')">
                    <span class="me-2">ü§ñ</span>
                    Cyborg
                  </a>
                </li>
                <li>
                  <a class="dropdown-item d-flex align-items-center" href="#" onclick="switchTheme('vapor')">
                    <span class="me-2">üîÆ</span>
                    Cyberpunk (Vapor)
                  </a>
                </li>
                <li>
                  <a class="dropdown-item d-flex align-items-center" href="#" onclick="switchTheme('slate')">
                    <span class="me-2">‚ö´</span>
                    Elegant (Slate)
                  </a>
                </li>
                <li>
                  <a class="dropdown-item d-flex align-items-center" href="#" onclick="switchTheme('solar')">
                    <span class="me-2">üü†</span>
                    Solar
                  </a>
                </li>
                <li>
                  <a class="dropdown-item d-flex align-items-center" href="#" onclick="switchTheme('superhero')">
                    <span class="me-2">ü¶∏</span>
                    Superhero
                  </a>
                </li>
              </ul>
            </li>

            <% if user_signed_in? %>
              <li class="nav-item dropdown">
                <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-bs-toggle="dropdown">
                  üë§ <%= current_user.email %>
                  <% if current_user.admin? %>
                    <span class="badge bg-warning text-dark ms-1">Admin</span>
                  <% end %>
                </a>
                <ul class="dropdown-menu dropdown-menu-end">
                  <% if current_user.admin? %>
                    <li>
                      <%= link_to admin_item_values_path, class: "dropdown-item" do %>
                        üîß Admin-Bereich
                      <% end %>
                    </li>
                    <li><hr class="dropdown-divider"></li>
                  <% end %>
                  <li>
                    <%= link_to edit_user_registration_path, class: "dropdown-item" do %>
                      ‚öôÔ∏è Account bearbeiten
                    <% end %>
                  </li>
                  <li><hr class="dropdown-divider"></li>
                  <li>
                    <%= link_to destroy_user_session_path, method: :delete, class: "dropdown-item" do %>
                      üö™ Logout
                    <% end %>
                  </li>
                </ul>
              </li>
            <% else %>
              <li class="nav-item">
                <%= link_to "Login", new_user_session_path, class: "nav-link" %>
              </li>
              <li class="nav-item">
                <%= link_to "Registrieren", new_user_registration_path, class: "nav-link" %>
              </li>
            <% end %>
          </ul>
          
          <% if @last_api_fetch %>
            <span class="navbar-text ms-3">
              <small>
                API-Check: 
                <span class="badge bg-<%= api_status_badge_class(@api_status, @last_api_fetch) %>">
                  <%= time_ago_in_seconds(@last_api_fetch) %>
                </span>
                <% if @api_status&.include?('error') %>
                  <span class="text-danger ms-1">‚ö†Ô∏è</span>
                <% end %>
              </small>
            </span>
          <% end %>
        </div>
      </div>
    </nav>

    <!-- Main Content -->
    <div class="container mt-4">
      <%= yield %>
    </div>

    <!-- Intelligenter Theme Switcher mit Tabellen-Support -->
    <script>
      const themes = {
        default: { 
          name: 'Standard', 
          icon: '‚òÄÔ∏è', 
          url: 'https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css',
          isDark: false
        },
        darkly: { 
          name: 'Dark', 
          icon: 'üåô', 
          url: 'https://cdn.jsdelivr.net/npm/bootswatch@5.3.2/dist/darkly/bootstrap.min.css',
          isDark: true
        },
        cyborg: { 
          name: 'Cyborg', 
          icon: 'ü§ñ', 
          url: 'https://cdn.jsdelivr.net/npm/bootswatch@5.3.2/dist/cyborg/bootstrap.min.css',
          isDark: true
        },
        vapor: { 
          name: 'Cyberpunk', 
          icon: 'üîÆ', 
          url: 'https://cdn.jsdelivr.net/npm/bootswatch@5.3.2/dist/vapor/bootstrap.min.css',
          isDark: true
        },
        slate: { 
          name: 'Elegant', 
          icon: '‚ö´', 
          url: 'https://cdn.jsdelivr.net/npm/bootswatch@5.3.2/dist/slate/bootstrap.min.css',
          isDark: true
        },
        solar: { 
          name: 'Solar', 
          icon: 'üü†', 
          url: 'https://cdn.jsdelivr.net/npm/bootswatch@5.3.2/dist/solar/bootstrap.min.css',
          isDark: true
        },
        superhero: { 
          name: 'Superhero', 
          icon: 'ü¶∏', 
          url: 'https://cdn.jsdelivr.net/npm/bootswatch@5.3.2/dist/superhero/bootstrap.min.css',
          isDark: true
        }
      };

      function switchTheme(themeName) {
        const theme = themes[themeName];
        if (!theme) return;

        // CSS wechseln
        const themeLink = document.getElementById('theme-css');
        themeLink.href = theme.url;

        // Display aktualisieren
        document.getElementById('current-theme-icon').textContent = theme.icon;
        document.getElementById('current-theme-name').textContent = theme.name;

        // Tabellen anpassen
        updateTablesForTheme(theme.isDark);

        // Theme speichern
        localStorage.setItem('idle-clans-theme', themeName);

        console.log(`üé® Theme gewechselt zu: ${theme.name} (Dark: ${theme.isDark})`);
      }

      function updateTablesForTheme(isDark) {
        const tables = document.querySelectorAll('.table');
        
        tables.forEach(table => {
          if (isDark) {
            // F√ºr dunkle Themes: table-dark hinzuf√ºgen
            if (!table.classList.contains('table-dark')) {
              table.classList.add('table-dark');
            }
          } else {
            // F√ºr helle Themes: table-dark entfernen
            table.classList.remove('table-dark');
          }
        });

        console.log(`üìä ${tables.length} Tabellen f√ºr ${isDark ? 'dunkles' : 'helles'} Theme angepasst`);
      }

      // Gespeichertes Theme laden
      function loadSavedTheme() {
        const savedTheme = localStorage.getItem('idle-clans-theme') || 'default';
        switchTheme(savedTheme);
      }

      // Theme beim Laden setzen
      document.addEventListener('DOMContentLoaded', loadSavedTheme);
      
      // F√ºr Turbo (Rails) - auch bei Navigation
      document.addEventListener('turbo:load', () => {
        const savedTheme = localStorage.getItem('idle-clans-theme') || 'default';
        const theme = themes[savedTheme];
        
        // Display aktualisieren (CSS ist schon geladen)
        if (document.getElementById('current-theme-icon')) {
          document.getElementById('current-theme-icon').textContent = theme.icon;
          document.getElementById('current-theme-name').textContent = theme.name;
        }
        
        // Tabellen f√ºr aktuelles Theme anpassen
        if (theme) {
          updateTablesForTheme(theme.isDark);
        }
      });

      // Keyboard-Shortcut f√ºr Theme-Wechsel
      document.addEventListener('keydown', (e) => {
        if ((e.ctrlKey || e.metaKey) && e.shiftKey && e.code === 'KeyT') {
          e.preventDefault();
          
          const themeKeys = Object.keys(themes);
          const currentTheme = localStorage.getItem('idle-clans-theme') || 'default';
          const currentIndex = themeKeys.indexOf(currentTheme);
          const nextIndex = (currentIndex + 1) % themeKeys.length;
          const nextTheme = themeKeys[nextIndex];
          
          switchTheme(nextTheme);
          
          // Toast-Benachrichtigung
          showThemeToast(themes[nextTheme]);
        }
      });

      function showThemeToast(theme) {
        const toast = document.createElement('div');
        toast.className = 'position-fixed bottom-0 end-0 p-3';
        toast.style.zIndex = '9999';
        toast.innerHTML = `
          <div class="toast show" role="alert" aria-live="assertive" aria-atomic="true">
            <div class="toast-header">
              <span class="me-2">${theme.icon}</span>
              <strong class="me-auto">Theme ge√§ndert</strong>
              <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
            </div>
            <div class="toast-body">
              ${theme.name} aktiviert
            </div>
          </div>
        `;
        
        document.body.appendChild(toast);
        
        setTimeout(() => {
          if (toast.parentNode) {
            toast.parentNode.removeChild(toast);
          }
        }, 3000);
      }
    </script>
  </body>
</html>